map $request_method $options_content_type {
    OPTIONS    "text/plain";
}
map $request_method $options_content_length {
    OPTIONS    0;
}
server {
    listen 80;
    server_name 127.0.0.1;
    root /var/www/htmltest;
 	

    ##
    # Nginx Bad Bot Blocker Includes
    # REPO: https://github.com/mitchellkrogza/nginx-ultimate-bad-bot-blocker
    ##
	include /etc/nginx/bots.d/ddos.conf; 
 	include /etc/nginx/bots.d/blockbots.conf;
 
    index index.html index.htm;


    location ~ /central/api(.*)+/(.*)$ {
           proxy_pass         http://host.docker.internal:20010;
           proxy_redirect     off;
           proxy_set_header   Host              $host;
           proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
           proxy_set_header   X-Forwarded-Proto $scheme;
           proxy_set_header X-Request-Id $request_id;
           if ($request_method = OPTIONS) { return 204; }
                   add_header 'Access-Control-Allow-Origin' '*';
                   add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE, PUT';
                   add_header 'Access-Control-Allow-Headers' 'User-Agent,Keep-Alive,Content-Type';
                   add_header Content-Type $options_content_type;
                   add_header Content-Length $options_content_length;
        }

        location / {
                if ($request_method = OPTIONS) { return 204; }
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, DELETE, PUT';
                add_header 'Access-Control-Allow-Headers' 'User-Agent,Keep-Alive,Content-Type';
                add_header Content-Type $options_content_type;
                add_header Content-Length $options_content_length;
            }

     error_log /var/log/nginx/html_test_error.log;
     access_log /var/log/nginx/html_test_access.log;
}
